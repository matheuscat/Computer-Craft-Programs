--Copyright (C) 2012 Mads Clausen luacodingcc@gmail.com

local t = {}
local lv = {}
t.__index = t

function new(_name, _value)
	if lv[_name] then 
		print("Variable is already loaded") 
		return false
	end
	
	local _t = {}
	_t.name = _name
	_t.value = _value
	setmetatable(_t, t)
	lv[_name] = true
	return _t
end

function exists(_name)
	local file = io.open("vars/".._name..".txt", "r")
	if file ~= nil then
		file:close()
		return true
	else
		return false
	end
end

function load(_name)
	if lv[_name] then
		print("Variable is already loaded")
		return
	end

	local _t = {}
	_t.name = _name
	_t.value = dofile("vars/".._name..".txt")
	setmetatable(_t, t)
	lv[_name] = true
	return _t
end

function t:save()
	if lv[self.name] then	
		local saveStr = ""
		if type(self.value) == "table" then
			saveStr = "{"
			for i = 1, #self.value do
				if type(self.value[i]) == "string" then
					saveStr = saveStr..'"'
					saveStr = saveStr..tostring(self.value[i])
					saveStr = saveStr..'"'
				else 
					saveStr = saveStr..tostring(self.value[i]) 
				end
				
				if i ~= #self.value then 
					saveStr = saveStr..", " 
				end
			end
			saveStr = saveStr.."}"
		else
			if type(self.value) == "string" then
				saveStr = saveStr..'"'
				saveStr = saveStr..tostring(self.value)
				saveStr = saveStr..'"'
			else
				saveStr = tostring(self.value)
			end
		end
		
		local file = io.open("vars/"..self.name..".txt", "w")
		file:write("return "..saveStr)
		file:close()
	else
		print("Variable is not loaded")
	end
end

function t:unload()
	if not lv[self.name] then 
		print("Variable is not loaded")
		return false
	end
	
	lv[self.name] = false
end